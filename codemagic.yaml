# codemagic.yaml
# هذا الملف يصف خطوات البناء والنشر لتطبيق Flutter باستخدام Codemagic CI/CD.

workflows:
  android-build:
    name: Android APK Build & Publish
    # تحديد الفروع التي ستؤدي إلى تشغيل هذا الـ workflow عند أي تغيير
    # تم تبسيط قسم trigger:
    trigger:
      branch_patterns:
        - pattern: 'main'
          include: true

    # مجموعة بيئة البناء
    environment:
      # تم إزالة 'jdk' من هنا لأنها غالباً ما تُحدد في إعدادات Workflow في واجهة Codemagic
      # أو يتم التعامل معها تلقائيًا بواسطة Flutter/Gradle.
      flutter: stable
      # يمكنك إضافة أي متغيرات بيئة تحتاجها هنا، مع تحديدها في Codemagic UI كـ "secrets"
      # group: android_vars

    # النص البرمجي الذي يتم تنفيذه قبل خطوات البناء
    scripts:
      - name: Set Flutter version
        script: |
          flutter channel stable
          flutter upgrade
          flutter doctor -v

      - name: Get Flutter dependencies
        script: |
          flutter pub get

      - name: Build Android APK
        script: |
          flutter build apk --release \
            --target-platform android-arm64 \
            --target-platform android-arm \
            --target-platform android-x64 \
            --split-per-abi

    # خطوات ما بعد البناء (Post-build steps)
    artifacts:
      # تحديد مكان ملفات البناء التي سيتم حفظها
      - app/build/app/outputs/flutter-apk/**/*.apk

    # خطوات النشر (Publishing)
    publishing:
      # codemagic: # تم إزالة 'codemagic' كحقل فرعي مباشر هنا
      # notifications: # يمكنك إضافة الإشعارات على مستوى الـ workflow مباشرة
      #   email:
      #     - your_email@example.com
      #     success: true
      #     failure: true

      # لتمكين النشر إلى Google Play، قم بإلغاء تعليق الأسطر التالية
      # وتأكد من إعداد بيانات الاعتماد في Codemagic UI
      # google_play:
      #   track: internal # أو 'beta' أو 'production'
      #   serviceAccountCredentials: $CM_GPLAY_SERVICE_ACCOUNT_CREDENTIALS
      #   releaseStatus: completed
